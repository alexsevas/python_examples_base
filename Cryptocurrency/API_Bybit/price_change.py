# conda activate allpy310

# –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–µ–∑–∫–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ü–µ–Ω—ã —Ç–æ–∫–µ–Ω–∞(price alert) –∏—Å–ø–æ–ª—å–∑—É—è –ø—É–±–ª–∏—á–Ω–æ–µ API Bybit

import requests
import time

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
BASE_URL = "https://api.bybit.com/v5/market/tickers"
SYMBOL = "BTCUSDT"  # –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞
CATEGORY = "spot"   # –¢–∏–ø —Ä—ã–Ω–∫–∞
CHECK_INTERVAL = 10  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω—ã (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
THRESHOLD_PERCENT = 1  # –ü–æ—Ä–æ–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö)

def get_current_price():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É —Å API Bybit"""
    params = {
        "category": CATEGORY,
        "symbol": SYMBOL
    }
    response = requests.get(BASE_URL, params=params)
    if response.status_code == 200:
        data = response.json()["result"]["list"][0]
        return float(data["lastPrice"])
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ API: {response.status_code}, {response.text}")

def main():
    print(f"–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä–µ–∑–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –¥–ª—è {SYMBOL}...")
    previous_price = get_current_price()
    print(f"–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {previous_price}\n")

    while True:
        try:
            current_price = get_current_price()
            price_change = ((current_price - previous_price) / previous_price) * 100

            # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø–æ—Ä–æ–≥
            if abs(price_change) >= THRESHOLD_PERCENT:
                print(f"üîî –†–µ–∑–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã!")
                print(f"–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {previous_price}, –ù–æ–≤–∞—è —Ü–µ–Ω–∞: {current_price}")
                print(f"–ò–∑–º–µ–Ω–µ–Ω–∏–µ: {price_change:.2f}%\n")
                previous_price = current_price  # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ü–µ–Ω—É

            time.sleep(CHECK_INTERVAL)

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            time.sleep(CHECK_INTERVAL)

if __name__ == "__main__":
    main()
