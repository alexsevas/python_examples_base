# EDIT

# conda activate allpy310

# –ü–æ–∏—Å–∫ –∫—Ä—É–ø–Ω—ã—Ö —Ä—ã–Ω–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ (–¥–µ—Ç–µ–∫—Ç–æ—Ä "–∫–∏—Ç–æ–≤"). –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤—ã—è–≤–ª—è—Ç—å –∞–Ω–æ–º–∞–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ –æ—Ä–¥–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–µ
# –º–æ–≥—É—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Ü–µ–Ω—É. –∏—Å–ø–æ–ª—å–∑—É—è –ø—É–±–ª–∏—á–Ω–æ–µ API Bybit

import requests
import time

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
TRADES_URL = "https://api.bybit.com/v5/market/recent-trade"
SYMBOL = "BTCUSDT"  # –¢–æ—Ä–≥–æ–≤–∞—è –ø–∞—Ä–∞
CATEGORY = "spot"   # –¢–∏–ø —Ä—ã–Ω–∫–∞ (spot –∏–ª–∏ linear –¥–ª—è —Ñ—å—é—á–µ—Ä—Å–æ–≤)
VOLUME_THRESHOLD = 5  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—ä—ë–º —Å–¥–µ–ª–∫–∏ –¥–ª—è "–∫–∏—Ç–∞" (–≤ BTC)
REFRESH_INTERVAL = 2  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

def get_recent_trades():
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–¥–µ–ª–∫–∏"""
    params = {
        "category": CATEGORY,
        "symbol": SYMBOL,
        "limit": 50  # –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å–¥–µ–ª–æ–∫
    }
    response = requests.get(TRADES_URL, params=params)
    if response.status_code == 200:
        return response.json().get("result", {}).get("list", [])
    else:
        raise Exception(f"–û—à–∏–±–∫–∞ API Trades: {response.status_code}, {response.text}")

def detect_whale_trades():
    """–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—Ä—É–ø–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ (–∫–∏—Ç–æ–≤)"""
    try:
        print(f"–ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫—Ä—É–ø–Ω—ã—Ö —Å–¥–µ–ª–æ–∫ –¥–ª—è {SYMBOL}...\n")
        while True:
            trades = get_recent_trades()

            for trade in trades:
                price = float(trade["p"])  # –¶–µ–Ω–∞ —Å–¥–µ–ª–∫–∏
                volume = float(trade["q"])  # –û–±—ä—ë–º —Å–¥–µ–ª–∫–∏
                side = "üü¢ –ü–æ–∫—É–ø–∫–∞" if trade["S"] == "Buy" else "üî¥ –ü—Ä–æ–¥–∞–∂–∞"

                # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä—É–ø–Ω—ã–µ —Å–¥–µ–ª–∫–∏
                if volume >= VOLUME_THRESHOLD:
                    print(f"{side} –Ω–∞ {volume:.2f} BTC –ø–æ —Ü–µ–Ω–µ {price:.2f}")

            time.sleep(REFRESH_INTERVAL)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    detect_whale_trades()
