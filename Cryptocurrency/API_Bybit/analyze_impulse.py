# conda activate allpy310

# –ê–Ω–∞–ª–∏–∑ –∏–º–ø—É–ª—å—Å–Ω—ã—Ö –¥–≤–∏–∂–µ–Ω–∏–π ‚Äî –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å–∏–ª—å–Ω—ã–µ —Å–≤–µ—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ –Ω–∞—á–∞–ª–µ —Ç—Ä–µ–Ω–¥–∞,
# –∏—Å–ø–æ–ª—å–∑—É—è –ø—É–±–ª–∏—á–Ω–æ–µ API Bybit

import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SYMBOL = "BTCUSDT"
KLINE_URL = "https://api.bybit.com/v5/market/kline"
INTERVAL = "15"  # 15-–º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏
LIMIT = 20  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
IMPULSE_THRESHOLD = 1.5  # –ü–æ—Ä–æ–≥ (x —Ä–∞–∑ –±–æ–ª—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —Ç–µ–ª–∞ —Å–≤–µ—á–∏)

def get_kline_data():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–≤–µ—á–∏"""
    params = {"category": "spot", "symbol": SYMBOL, "interval": INTERVAL, "limit": LIMIT}
    response = requests.get(KLINE_URL, params=params)

    if response.status_code == 200:
        return response.json().get("result", {}).get("list", [])
    else:
        print(f"–û—à–∏–±–∫–∞ API: {response.status_code}")
        return None

def analyze_impulse():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏–º–ø—É–ª—å—Å–Ω—ã–µ —Å–≤–µ—á–∏"""
    candles = get_kline_data()
    if not candles:
        return

    # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Ç–µ–ª–∞ —Å–≤–µ—á–∏
    body_sizes = [abs(float(c[4]) - float(c[1])) for c in candles]  # |Close - Open|
    avg_body = sum(body_sizes) / len(body_sizes)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É
    last_open = float(candles[-1][1])
    last_close = float(candles[-1][4])
    last_body = abs(last_close - last_open)

    if last_body > avg_body * IMPULSE_THRESHOLD:
        direction = "‚¨ÜÔ∏è –í–≤–µ—Ä—Ö" if last_close > last_open else "‚¨áÔ∏è –í–Ω–∏–∑"
        print(f"üöÄ –ò–º–ø—É–ª—å—Å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ! {direction} (–¢–µ–ª–æ —Å–≤–µ—á–∏: {last_body:.2f}, –°—Ä–µ–¥–Ω–µ–µ: {avg_body:.2f})")
    else:
        print("üìâ –ù–µ—Ç —Å–∏–ª—å–Ω–æ–≥–æ –∏–º–ø—É–ª—å—Å–∞.")

if __name__ == "__main__":
    analyze_impulse()
