# conda activate allpy310

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ —Ü–µ–Ω—ã.
# –ü–æ—á–µ–º—É —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ:
# - –ò–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –±–æ–∫–æ–≤–∏–∫ –ø–µ—Ä–µ–¥ —Å–∏–ª—å–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º
# - –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ—á–µ–∫ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–±–æ–π
# - –ú–æ–∂–Ω–æ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —Å –æ–±—ä–µ–º–∞–º–∏ –∏ RSI

# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω–æ–µ API Bybit

import requests
import numpy as np

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SYMBOL = "BTCUSDT"
KLINE_URL = "https://api.bybit.com/v5/market/kline"
INTERVAL = "15"  # 15-–º–∏–Ω—É—Ç–Ω—ã–µ —Å–≤–µ—á–∏
LIMIT = 50  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
RANGE_THRESHOLD = 0.002  # –ü–æ—Ä–æ–≥ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏ (0.2% –æ—Ç —Ü–µ–Ω—ã)

def get_kline_data():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Å–≤–µ—á–∏"""
    params = {"category": "spot", "symbol": SYMBOL, "interval": INTERVAL, "limit": LIMIT}
    response = requests.get(KLINE_URL, params=params)

    if response.status_code == 200:
        return response.json().get("result", {}).get("list", [])
    else:
        print(f"–û—à–∏–±–∫–∞ API: {response.status_code}")
        return None

def detect_consolidation():
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—é —Ü–µ–Ω—ã"""
    candles = get_kline_data()
    if not candles:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.")
        return

    closes = np.array([float(c[4]) for c in candles])
    highs = np.array([float(c[2]) for c in candles])
    lows = np.array([float(c[3]) for c in candles])

    min_price = np.min(lows[-10:])  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ 10 —Å–≤–µ—á–µ–π
    max_price = np.max(highs[-10:])  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞ 10 —Å–≤–µ—á–µ–π
    price_range = (max_price - min_price) / closes[-1]

    # üîç –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–∫—É:
    print(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–≤–µ—á–µ–π...")
    print(f"üîπ Min —Ü–µ–Ω–∞: {min_price:.2f}, Max —Ü–µ–Ω–∞: {max_price:.2f}")
    print(f"üîπ –¢–µ–∫—É—â–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω: {price_range:.5f}, –ü–æ—Ä–æ–≥: {RANGE_THRESHOLD}")

    if price_range < RANGE_THRESHOLD:
        print(f"üìâ –ö–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏—è: {min_price:.2f} - {max_price:.2f}, –≤–æ–∑–º–æ–∂–Ω—ã–π –ø—Ä–æ–±–æ–π!")
    else:
        print("‚è≥ –ù–µ—Ç –∫–æ–Ω—Å–æ–ª–∏–¥–∞—Ü–∏–∏. –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞...")

if __name__ == "__main__":
    detect_consolidation()
