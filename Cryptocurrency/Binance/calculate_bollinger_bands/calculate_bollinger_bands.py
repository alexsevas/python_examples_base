# conda activate allpy310

import ccxt
import pandas as pd
import talib # —á–µ—Ä–µ–∑ pip install - –æ—à–∏–±–∫–∞, —Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±–∏–Ω–≤—Ä–Ω–∏–∫–∞

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
EXCHANGE_NAME = "binance"
PAIR = "BTC/USDT"
TIMEFRAME = "1h"
BB_PERIOD = 20  # –ü–µ—Ä–∏–æ–¥ –ë–æ–ª–ª–∏–Ω–¥–∂–µ—Ä–∞
BB_STD_DEV = 2  # –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏—Ä–∂–∏
exchange = getattr(ccxt, EXCHANGE_NAME)()
exchange.load_markets()

# –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
def fetch_ohlcv(symbol):
    ohlcv = exchange.fetch_ohlcv(symbol, timeframe=TIMEFRAME, limit=BB_PERIOD + 5)
    df = pd.DataFrame(ohlcv, columns=["timestamp", "open", "high", "low", "close", "volume"])
    return df

# –†–∞—Å—Å—á–µ—Ç Bollinger Bands
def calculate_bollinger_bands(df):
    upper, middle, lower = talib.BBANDS(df["close"], timeperiod=BB_PERIOD, nbdevup=BB_STD_DEV, nbdevdn=BB_STD_DEV, matype=0)
    return upper.iloc[-1], middle.iloc[-1], lower.iloc[-1], df["close"].iloc[-1]

# –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–æ—è
def bollinger_breakout():
    df = fetch_ohlcv(PAIR)
    upper, middle, lower, close = calculate_bollinger_bands(df)

    print(f"–¶–µ–Ω–∞: {close:.2f}, BB Upper: {upper:.2f}, BB Lower: {lower:.2f}")

    if close > upper:
        print("üìà –ü—Ä–æ–±–æ–π –≤–µ—Ä—Ö–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã! –í–æ–∑–º–æ–∂–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –∏–ª–∏ –ª–æ–∂–Ω—ã–π –ø—Ä–æ–±–æ–π.")
    elif close < lower:
        print("üìâ –ü—Ä–æ–±–æ–π –Ω–∏–∂–Ω–µ–π –≥—Ä–∞–Ω–∏—Ü—ã! –í–æ–∑–º–æ–∂–Ω—ã–π –æ—Ç—Å–∫–æ–∫ –≤–≤–µ—Ä—Ö.")

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    bollinger_breakout()
