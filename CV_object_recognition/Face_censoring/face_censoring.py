

import cv2

# üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
image_path = "data/FOOAxrwn4cU.jpg"
image = cv2.imread(image_path)

# üîπ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å–∫–∞–¥–∞ –•–∞–∞—Ä–∞ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ª–∏—Ü
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + "haarcascade_frontalface_default.xml")

# üîπ –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á/–±
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

# üîπ –ü–æ–∏—Å–∫ –ª–∏—Ü
faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5)

print(f"üëÄ –ù–∞–π–¥–µ–Ω–æ –ª–∏—Ü: {len(faces)}")

# üîπ –†–∞–∑–º—ã—Ç–∏–µ –∫–∞–∂–¥–æ–≥–æ –ª–∏—Ü–∞
for (x, y, w, h) in faces:
    face_region = image[y:y+h, x:x+w]
    blurred = cv2.GaussianBlur(face_region, (99, 99), 30)
    image[y:y+h, x:x+w] = blurred

# üîπ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
cv2.imwrite("data/blurred_faces.jpg", image)
print("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: blurred_faces.jpg")
